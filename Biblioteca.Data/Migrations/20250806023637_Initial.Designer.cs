// <auto-generated />
using System;
using Biblioteca.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250806023637_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Domain.Entities.Editora", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Editora", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Agir"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Martins Fontes"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ricordi"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Benvirá"
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.Entities.GeneroLivro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("GeneroLivro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genero = "Fábula"
                        },
                        new
                        {
                            Id = 2,
                            Genero = "Fantasia"
                        },
                        new
                        {
                            Id = 3,
                            Genero = "Didático"
                        },
                        new
                        {
                            Id = 4,
                            Genero = "Auto-Ajuda"
                        },
                        new
                        {
                            Id = 5,
                            Genero = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Genero = "Tecnologia"
                        },
                        new
                        {
                            Id = 7,
                            Genero = "Ciência"
                        },
                        new
                        {
                            Id = 8,
                            Genero = "Saúde e Bem-Estar"
                        },
                        new
                        {
                            Id = 9,
                            Genero = "Ciências Sociais"
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.Entities.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CaminhoFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EditoraId")
                        .HasColumnType("int");

                    b.Property<byte>("FotoLivro")
                        .HasColumnType("tinyint");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsuarioRegistro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Livros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f098cac-9c52-4b63-9529-aaa0178083bc"),
                            Autor = "Antoine de Saint-Exupéry",
                            CaminhoFoto = "0",
                            EditoraId = 1,
                            FotoLivro = (byte)0,
                            GeneroId = 1,
                            ISBN = "978-85-359-0277-7",
                            Sinopse = "Uma história poética e filosófica contada por um piloto que encontra um pequeno príncipe vindo de outro planeta. A obra aborda temas como amizade, amor e o sentido da vida.",
                            Titulo = "O Pequeno Príncipe",
                            UsuarioRegistro = "rfccrj@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("0fd11c8f-15ac-4e9a-abf2-7e2499fd2ff7"),
                            Autor = "J.R.R. Tolkien",
                            CaminhoFoto = "0",
                            EditoraId = 2,
                            FotoLivro = (byte)0,
                            GeneroId = 2,
                            ISBN = "978-85-222-0573-5",
                            Sinopse = "Uma épica jornada pela Terra Média em que um grupo improvável de heróis precisa destruir um anel mágico e maligno para evitar que um senhor das trevas domine o mundo.",
                            Titulo = "O Senhor dos Anéis",
                            UsuarioRegistro = "rfccrj@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("270abab8-6a79-4592-83f3-3070e146e259"),
                            Autor = "Bohumil Med",
                            CaminhoFoto = "/uploads/2dfbf92a-77de-471d-3282-08ddd1ea4bf9_teoria_da_musica.JPG",
                            EditoraId = 3,
                            FotoLivro = (byte)0,
                            GeneroId = 3,
                            ISBN = "978-85-7060-013-1",
                            Sinopse = "Obra consagrada que apresenta fundamentos teóricos da música com linguagem acessível e progressiva. Utilizada em escolas de música, conservatórios e cursos técnicos.",
                            Titulo = "Teoria da Música",
                            UsuarioRegistro = "rfccrj@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("28ecc827-6eb3-498c-9583-95d560ff290e"),
                            Autor = "Augusto Cury",
                            CaminhoFoto = "0",
                            EditoraId = 4,
                            FotoLivro = (byte)0,
                            GeneroId = 4,
                            ISBN = "978-85-452-0016-2",
                            Sinopse = "O livro apresenta conceitos da psicologia para ajudar o leitor a entender e enfrentar a ansiedade, com foco na Síndrome do Pensamento Acelerado, termo cunhado pelo autor.",
                            Titulo = "Ansiedade - Como enfrentar o mal do século",
                            UsuarioRegistro = "rfccrj@gmail.com"
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.Entities.Usuario", b =>
                {
                    b.Property<string>("EmailLogin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EmailLogin");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Domain.Entities.Livro", b =>
                {
                    b.HasOne("Biblioteca.Domain.Entities.Editora", "Editora")
                        .WithMany()
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Domain.Entities.GeneroLivro", "GeneroLivro")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editora");

                    b.Navigation("GeneroLivro");
                });
#pragma warning restore 612, 618
        }
    }
}
